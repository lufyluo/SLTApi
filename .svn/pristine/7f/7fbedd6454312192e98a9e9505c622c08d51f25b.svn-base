using AppApi.App_Data;
using AppApi.Filter;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace AppApi.Controllers
{
    public class FileController : BaseControllers
    {
        public int buflen = 102400;
        [Check]
        [File]
        [HttpPost]
        public Models.BackParameter Download([FromBody]Models.File.Gain.Download D)//下载文件
        {
            byte[] filedata = db.Database.SqlQuery<byte[]>(String.Format("GetMailFile {0},{1},{2}", D.FileId, D.Position, buflen), "").FirstOrDefault();
            string data = Convert.ToBase64String(filedata);
            Models.File.Back.Download BD = new Models.File.Back.Download()
            {
                fileid = D.FileId,
                data = data,
                position = D.Position
            };
            BP.back = BD;
            return BP;
        }
        [Check]
        [HttpPost]
        public Models.BackParameter Submit([FromBody]Models.File.Gain.Submit U)//提交文件
        {
            U.Data = U.Data.Replace(" ", "+");
            byte[] filebyte = Convert.FromBase64String(U.Data);
            Tools.filest filelist = new Tools.filest()
            {
                FileName = U.Name,
                fileclass = U.fileclass,
                ContentType = U.Name.Split('.')[1],
                filebyte = filebyte,
                userid = U.UserId,
                mailid = null,
                mailboxid = null,


            };
            if (filelist.fileclass=="2")
            {
                filelist.mailboxid = U.mailboxid;
                filelist.mailid = U.mailid;
                filelist.strDid = System.Guid.NewGuid().ToString().Replace("-", "");
            }
            else
            {
               filelist.DownloadID = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(DateTime.Now.ToString("yyyyMMddHHmmssfff"), "MD5").ToUpper();
            }
           Tools.filereturn filereturn = Tools.file.Savefile(filelist);

            BP.back = filereturn;
            return BP;
            

            
        }

        [Check]
        [FileCreater]
        [HttpPost]
        public Models.BackParameter Upload([FromBody]Models.File.Gain.Upload C)//续传文件
        {
            Models.File.Back.Upload BU = new Models.File.Back.Upload();
            int datasize = dbf.Database.SqlQuery<int>("select datasize=DATALENGTH(isnull([Data],'')) from maildata_T where id=" + C.FileId).FirstOrDefault();
            int filesize = dbm.Database.SqlQuery<int>("select FileSize from MailAcc_T where Fileid=" + C.FileId).FirstOrDefault();
            if (filesize > 0)
            {
                C.Data = C.Data.Replace(" ", "+");
                if (filesize > datasize)
                {
                    byte[] data = Convert.FromBase64String(C.Data);
                    dbf.UpdateMailFile(C.FileId, data, C.Position);
                    int nowsize = C.Position + data.Length;
                    if (filesize <= nowsize)
                    {
                        BP.code = Tools.BackCode.FileIsFinish;
                        BP.back = Tools.BackCode.CodeStr[BP.code];
                        return BP;
                    }
                    else
                    {
                        BU.fileid = C.FileId;
                        BU.length = nowsize;
                        BU.msg = "上传成功";
                        BP.back = BU;
                        return BP;
                    }
                }
                else
                {
                    BP.code = Tools.BackCode.FileIsFinish;
                    BP.back = Tools.BackCode.CodeStr[BP.code];
                    return BP;
                }

            }
            else
            {
                BP.code = Tools.BackCode.Err;
                BP.back = "获取文件大小失败";
                return BP;
            }

        }

        [Check]
        [HttpPost]
        public Models.BackParameter downloaduri([FromBody]Models.File.Gain.download C)//uri下载文件
        {
            Models.File.Gain.filereturn result = new Models.File.Gain.filereturn();
            string filename = dbm.Database.SqlQuery<string>("select filename from [dbo].[MailAcc_T] where id=" + C.fileid + "").FirstOrDefault();
            result.uri=Tools.file.download(C.fileclass,C.fileid,filename);
            BP.back = result;
            return BP;
        }
        
    }
}
